<?xml version="1.0" encoding="UTF-8"?>

<!--

~~~~~~~~~~~~~~~~~~~
VNX scenario
~~~~~~~~~~~~~~~~~~~

Name:       OpenNOP_Test_Scenario 
Version:    03
Description: Basic scenario for testing OpenNOP capabilities. 

This file is part of the Virtual Networks over LinuX (VNX) Project distribution. 
(www: http://www.dit.upm.es/vnx - e-mail: vnx@dit.upm.es) 

Departamento de Ingenieria de Sistemas Telematicos (DIT)
Universidad Politecnica de Madrid
SPAIN

-->

<vnx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="/usr/share/xml/vnx/vnx-2.00.xsd">
  <global>
    <version>2.0</version>
    <scenario_name>opennop-kvm</scenario_name>
    <ssh_key>~/.ssh/id_dsa.pub</ssh_key>
    <automac/>
    <vm_mgmt type="private" network="10.250.0.0" mask="24" offset="0">
       <host_mapping />
    </vm_mgmt>

    <vm_defaults>
	    <console id="0" display="no"/>
	    <console id="1" display="yes"/>
    </vm_defaults>
    <cmd-seq seq='reloadmod'>unload,compmod,loadmod</cmd-seq>
    <cmd-seq seq='reloaddaemon'>stopdaemon,compdaemon,startdaemon</cmd-seq>
    <cmd-seq seq='start-all'>emula,copycode,loadiptables,reloaddaemon,start-http,start-mgmt</cmd-seq>
    <cmd-seq seq='start-all-mod'>emula,copycode,reloadmod,reloaddaemon,start-http,start-mgmt</cmd-seq>
  </global>

  <net name="LanA"   mode="virtual_bridge" />
  <net name="LanB"   mode="virtual_bridge" />
  <net name="Lan0"   mode="virtual_bridge" />
  <net name="Lan1"   mode="virtual_bridge" />
  <net name="LanSta" mode="virtual_bridge" />
  <net name="virbr0" mode="virtual_bridge" managed="no"/>


  <vm name="o1" type="libvirt" subtype="kvm" os="linux" vcpu="4" arch="x86_64">
    <filesystem type="cow">filesystems/rootfs_opennop</filesystem>
    <mem>4096M</mem>
    <if id="1" net="LanA">
      <ipv4>192.168.0.1/24</ipv4>
    </if>
    <if id="2" net="Lan0">
      <ipv4>10.0.0.2/29</ipv4>
    </if>
    <if id="9" net="virbr0">
      <ipv4>dhcp</ipv4>
    </if>
    <route type="ipv4" gw="10.0.0.1">10.0.0.0/16</route>
    <route type="ipv4" gw="10.0.0.1">192.168.0.0/16</route>
    <forwarding type="ip" />

    <!-- Copy /etc/hosts file -->
    <filetree seq="on_boot" root="/tmp/">conf/hosts</filetree>

    <!-- Copy scripts -->
    <filetree seq="on_boot" root="/root/bin/">conf/o1/scripts/</filetree>

    <!-- Copy /opt/dashboard -->
    <filetree seq="on_boot" root="/opt/dashboard/">conf/o1/dashboard/</filetree>

    <!-- Copy ssh files -->
    <filetree seq="on_boot" root="/root/.ssh/" perms="600">./conf/o1/ssh/</filetree>

    <!-- Copy opennop files -->
    <filetree seq="copycode" root="/root/opennop/">/home/solowan/opennop/</filetree>
    <filetree seq="copycode" root="/root/bin/">./conf/opennop/</filetree>
    <filetree seq="copycode" root="/etc/opennop/">./conf/o1/opennop.conf</filetree>

    <!-- Start Opennop management -->
    <filetree seq="start-mgmt" root="/usr/share/munin/plugins/">conf/o1/optimizadorC</filetree>
    <filetree seq="start-mgmt" root="/usr/share/munin/plugins/">conf/o1/optimizadorD</filetree>
     <!-- Copy websocketd files -->
    <filetree seq="start-mgmt" root="/usr/local/bin/websocketd">../../others/websocketd64</filetree>

    <!-- Add host entries to /etc/host -->
    <!--<exec seq="on_boot" type="verbatim">cat /tmp/hosts >> /etc/hosts</exec>-->

    <exec seq="on_boot" type="verbatim">echo "PermitTunnel yes" >> /etc/ssh/sshd_config</exec>
    <exec seq="on_boot" type="verbatim">service ssh restart</exec>

    <!-- OpenNOP module -->
    <exec seq="compmod"   type="verbatim" ostype="system">
        cd /root/opennop/opennop-module;
        make >> /var/log/vnx.log
    </exec>
    <exec seq="loadmod"   type="verbatim" ostype="system">modprobe opennopdrv >> /var/log/vnx.log</exec>
    <exec seq="unloadmod" type="verbatim" ostype="system">rmmod opennopdrv >> /var/log/vnx.log</exec>

    <!-- OpenNOP iptables rules -->
    <exec seq="loadiptables"   type="verbatim" ostype="system">iptables -A FORWARD -j NFQUEUE --queue-num 0 -p TCP --sport 80 >> /var/log/vnx.log</exec>
    <exec seq="loadiptables"   type="verbatim" ostype="system">iptables -A FORWARD -j NFQUEUE --queue-num 0 -p TCP --dport 80 >> /var/log/vnx.log</exec>
    <exec seq="unloadiptables"   type="verbatim" ostype="system">iptables -X >> /var/log/vnx.log</exec>
    <exec seq="unloadiptables"   type="verbatim" ostype="system">iptables -F >> /var/log/vnx.log</exec>

    <!-- OpenNOP daemon -->
    <exec seq="compdaemon"   type="verbatim" ostype="system">
        cd /root/opennop/opennop-daemon;
        make clean >> /var/log/vnx.log 2>&amp;1 ;
        ./autogen.sh >> /var/log/vnx.log 2>&amp;1 ;
        ./configure >> /var/log/vnx.log 2>&amp;1 ;
        make >> /var/log/vnx.log 2>&amp;1 ;
        sed -i -e '/^memory/d' /etc/opennop/opennop.conf;
        sed -i -e 's/^thrnum.*/thrnum 1/' /etc/opennop/opennop.conf
        #echo "memory 24576000" >> /etc/opennop/opennop.conf;
    </exec>
    <exec seq="startdaemon"  type="verbatim" ostype="system">
        /root/opennop/opennop-daemon/opennopd/opennopd -n >> /var/log/opennop.log &amp;
    </exec>
    <exec seq="stopdaemon"   type="verbatim" ostype="system">
        killall -9 /root/opennop/opennop-daemon/opennopd/opennopd
    </exec>

    <!--exec seq="configssh"  type="verbatim" ostype="system">rm /root/.ssh/id_rsa; ssh-keygen -b 2048 -t rsa -q -N "" -f /root/.ssh/id_rsa</exec!-->

    <!-- Create SSH tunnel among optimizers -->
    <exec seq="createtunnel"  type="verbatim" ostype="exec">ssh -f -w any 10.0.0.10 true</exec>
    <exec seq="createtunnel"  type="verbatim" ostype="system">sleep 3; ifconfig tun0 10.10.10.1/24 up</exec>

    <!-- Delete the SSH tunnel -->
    <exec seq="deletetunnel"  type="verbatim" ostype="system">pkill -f "ssh -f -w any"</exec>

    <!-- Route traffic through tunnel -->
    <exec seq="addtunnelroute"  type="verbatim" ostype="system">ip route add 192.168.0.0/16 dev tun0</exec>

    <!-- Do NOT route traffic through tunnel -->
    <exec seq="deltunnelroute"  type="verbatim" ostype="system">ip route del 192.168.0.0/16 dev tun0</exec>

    <!-- Configure statistics  -->

    <!-- Add munin-node configuration  -->
    <exec seq="start-mgmt" type="verbatim" ostype="system">sed -i 's/allow ^127\\.0\\.0\\.1\$/allow ^192\\.168\\.2\\.2\$/' /etc/munin/munin-node.conf</exec>
    <!-- To enable opennop plugins for Munin   --> 
    <exec seq="start-mgmt" type="verbatim" ostype="system">chmod +x /usr/share/munin/plugins/optimizador*</exec>
    <exec seq="start-mgmt" type="verbatim" ostype="system">
	unlink /etc/munin/plugins/apache_accesses;
        unlink /etc/munin/plugins/apache_processes;
	unlink /etc/munin/plugins/apache_volume;
	unlink /etc/munin/plugins/users;
	unlink /etc/munin/plugins/swap						   
    </exec>
    <exec seq="start-mgmt" type="verbatim" ostype="system">
	ln -s /usr/share/munin/plugins/optimizadorC /etc/munin/plugins;
        ln -s /usr/share/munin/plugins/optimizadorD /etc/munin/plugins;    
        echo "" >> /etc/munin/plugin-conf.d/munin-node;
        echo "[optimiz*]" >> /etc/munin/plugin-conf.d/munin-node;
        echo "user root" >> /etc/munin/plugin-conf.d/munin-node
    </exec>
    <!-- Configure Websocketd   -->  
    <exec seq="start-mgmt" type="verbatim" ostype="system">/root/bin/websockets.sh > /var/log/websockets.log &amp;</exec>
    <exec seq="start-mgmt" type="verbatim" ostype="system">service munin-node restart</exec>
    <exec seq="start-mgmt" type="verbatim" ostype="system">service nginx restart</exec>


  </vm>


  <vm name="o2" type="libvirt" subtype="kvm" os="linux" vcpu="4" arch="x86_64">
    <filesystem type="cow">filesystems/rootfs_opennop</filesystem>
    <mem>4096M</mem>
    <if id="1" net="LanB">
      <ipv4>192.168.1.1/24</ipv4>
    </if>
    <if id="2" net="Lan1">
      <ipv4>10.0.0.10/29</ipv4>
    </if>
    <if id="3" net="LanSta">
      <ipv4>192.168.2.1/24</ipv4>
    </if>
    <if id="9" net="virbr0">
      <ipv4>dhcp</ipv4>
    </if>
    <route type="ipv4" gw="10.0.0.9">10.0.0.0/16</route>
    <route type="ipv4" gw="10.0.0.9">192.168.0.0/16</route>
    <forwarding type="ip" />

    <!-- Copy /etc/hosts file -->
    <filetree seq="on_boot" root="/tmp/">conf/hosts</filetree>

    <!-- Copy scripts -->
    <filetree seq="on_boot" root="/root/bin/">conf/o2/scripts/</filetree>

    <!-- Copy /opt/dashboard -->
    <filetree seq="on_boot" root="/opt/dashboard/">conf/o2/dashboard/</filetree>

    <!-- Copy ssh files -->
    <filetree seq="on_boot" root="/root/.ssh/" perms="600">./conf/o2/ssh/</filetree>

    <filetree seq="copycode" root="/root/opennop/">/home/solowan/opennop/</filetree>
    <filetree seq="copycode" root="/root/bin/">./conf/opennop/</filetree>
    <filetree seq="copycode" root="/etc/opennop/">./conf/o2/opennop.conf</filetree>

    <!-- Start Opennop management -->
    <filetree seq="start-mgmt" root="/usr/share/munin/plugins/">conf/o2/optimizadorC</filetree>
    <filetree seq="start-mgmt" root="/usr/share/munin/plugins/">conf/o2/optimizadorD</filetree>

    <!-- Copy websocketd files -->
    <filetree seq="start-mgmt" root="/usr/local/bin/websocketd">../../others/websocketd64</filetree>

    <!-- Add host entries to /etc/host -->
    <!--<exec seq="on_boot" type="verbatim">cat /tmp/hosts >> /etc/hosts</exec>-->

    <exec seq="on_boot" type="verbatim">echo "PermitTunnel yes" >> /etc/ssh/sshd_config</exec>
    <exec seq="on_boot" type="verbatim">service ssh restart</exec>

    <!-- OpenNOP module -->
    <exec seq="compmod"   type="verbatim" ostype="system">
        cd /root/opennop/opennop-module;
        make >> /var/log/vnx.log
    </exec>
    <exec seq="loadmod"   type="verbatim" ostype="system">modprobe opennopdrv >> /var/log/vnx.log</exec>
    <exec seq="unloadmod" type="verbatim" ostype="system">rmmod opennopdrv >> /var/log/vnx.log</exec>

    <!-- OpenNOP iptables rules -->
    <exec seq="loadiptables"   type="verbatim" ostype="system">iptables -A FORWARD -j NFQUEUE --queue-num 0 -p TCP --sport 80 >> /var/log/vnx.log</exec>
    <exec seq="loadiptables"   type="verbatim" ostype="system">iptables -A FORWARD -j NFQUEUE --queue-num 0 -p TCP --dport 80 >> /var/log/vnx.log</exec>
    <exec seq="unloadiptables"   type="verbatim" ostype="system">iptables -X >> /var/log/vnx.log</exec>
    <exec seq="unloadiptables"   type="verbatim" ostype="system">iptables -F >> /var/log/vnx.log</exec>

    <!-- OpenNOP daemon -->
    <exec seq="compdaemon"   type="verbatim" ostype="system">
        cd /root/opennop/opennop-daemon;
        make clean >> /var/log/vnx.log 2>&amp;1 ;
        ./autogen.sh >> /var/log/vnx.log 2>&amp;1 ;
        ./configure >> /var/log/vnx.log 2>&amp;1 ;
        make >> /var/log/vnx.log 2>&amp;1 ;
        sed -i -e '/^memory/d' /etc/opennop/opennop.conf;
        sed -i -e 's/^thrnum.*/thrnum 1/' /etc/opennop/opennop.conf
        #echo "memory 24576000" >> /etc/opennop/opennop.conf;
    </exec>
    <exec seq="startdaemon"  type="verbatim" ostype="system">
        /root/opennop/opennop-daemon/opennopd/opennopd -n >> /var/log/opennop.log &amp;
    </exec>
    <exec seq="stopdaemon"   type="verbatim" ostype="system">
        killall -9 /root/opennop/opennop-daemon/opennopd/opennopd
    </exec>

    <!-- Create SSH tunnel among optimizers -->
    <!--exec seq="createtunnel"  type="verbatim" ostype="exec">ssh -f -w any 10.0.0.2 true</exec>
    <exec seq="createtunnel"  type="verbatim" ostype="system">sleep 3; ifconfig tun1 10.10.10.2/24 up</exec!-->
    <exec seq="createtunnel"  type="verbatim" ostype="system">ifconfig tun0 10.10.10.2/24 up</exec>

    <!-- Delete the SSH tunnel -->
    <exec seq="deletetunnel"  type="verbatim" ostype="system">pkill -f "ssh -f -w any"</exec>

    <!-- Route traffic through tunnel -->
    <!--exec seq="addtunnelroute"  type="verbatim" ostype="system">ip route add 192.168.0.0/16 dev tun1</exec!-->
    <exec seq="addtunnelroute"  type="verbatim" ostype="system">ip route add 192.168.0.0/16 dev tun0</exec>

    <!-- Do NOT route traffic through tunnel -->
    <!--exec seq="deltunnelroute"  type="verbatim" ostype="system">ip route del 192.168.0.0/16 dev tun1</exec!-->
    <exec seq="deltunnelroute"  type="verbatim" ostype="system">ip route del 192.168.0.0/16 dev tun0</exec>

    <!-- Configure statistics  -->

    <!-- Add munin-node configuration  -->
    <exec seq="start-mgmt" type="verbatim" ostype="system">sed -i 's/allow ^127\\.0\\.0\\.1\$/allow ^192\\.168\\.2\\.2\$/' /etc/munin/munin-node.conf</exec>
    <!-- To enable opennop plugins for Munin   --> 
    <exec seq="start-mgmt" type="verbatim" ostype="system">chmod +x /usr/share/munin/plugins/optimizador*</exec>
    <exec seq="start-mgmt" type="verbatim" ostype="system">
	unlink /etc/munin/plugins/apache_accesses;
        unlink /etc/munin/plugins/apache_processes;
	unlink /etc/munin/plugins/apache_volume;
	unlink /etc/munin/plugins/users;
	unlink /etc/munin/plugins/swap						   
    </exec>
    <exec seq="start-mgmt" type="verbatim" ostype="system">
	ln -s /usr/share/munin/plugins/optimizadorC /etc/munin/plugins;
        ln -s /usr/share/munin/plugins/optimizadorD /etc/munin/plugins;    
        echo "" >> /etc/munin/plugin-conf.d/munin-node;
        echo "[optimiz*]" >> /etc/munin/plugin-conf.d/munin-node;
        echo "user root" >> /etc/munin/plugin-conf.d/munin-node
    </exec>
    <!-- Configure Websocketd   -->  
    <exec seq="start-mgmt" type="verbatim" ostype="system">/root/bin/websockets.sh > /var/log/websockets.log &amp;</exec>
    <exec seq="start-mgmt" type="verbatim" ostype="system">service munin-node restart</exec>
    <exec seq="start-mgmt" type="verbatim" ostype="system">service nginx restart</exec>

  </vm>


  <vm name="h1" type="libvirt" subtype="kvm" os="linux" arch="x86_64">
    <filesystem type="cow">filesystems/rootfs_opennop</filesystem>
    <mem>512M</mem>
    <if id="1" net="LanA">
      <ipv4>192.168.0.2/24</ipv4>
    </if>
    <if id="9" net="virbr0">
      <ipv4>dhcp</ipv4>
    </if>
    <route type="ipv4" gw="192.168.0.1">10.0.0.0/16</route>
    <route type="ipv4" gw="192.168.0.1">192.168.0.0/16</route>

    <!-- Copy /etc/hosts file -->
    <filetree seq="on_boot" root="/tmp/">conf/hosts</filetree>

    <!-- Copy scripts -->
    <filetree seq="on_boot" root="/root/bin/">conf/hx/scripts/</filetree>

    <filetree seq="start-http" root="/tmp/">./conf/hx/</filetree>
    <filetree seq="wget_no_opt" root="/tmp/">./conf/hx/wget_no_opt.sh</filetree>
    <filetree seq="start-http" root="/tmp/">./conf/hx/prueba.sh</filetree>
    
    <filetree seq="wget_opt" root="/tmp/">./conf/hx/wget_opt.sh</filetree>
    <filetree seq="copycode" root="/root/">./conf/hx/prueba.sh</filetree>
    <filetree seq="copycode" root="/root/">./conf/hx/prueba-larga.sh</filetree>
    
    <!-- Add host entries to /etc/host -->
    <exec seq="on_boot" type="verbatim">
	cat /tmp/hosts >> /etc/hosts;
	sed -i -e 's#DocumentRoot /var/www/html#DocumentRoot /var/www#' /etc/apache2/sites-enabled/000-default.conf
    </exec>

    <exec seq="iperf_cl_no_opt" type="verbatim" ostype="exec">iperf -c 192.168.1.2 -t 150 -i 1 > /root/iperf_noopt_result.out</exec>

    <exec seq="iperf_cl_opt" type="verbatim" ostype="exec">iperf -c 192.168.1.2 -t 150 -i 1 > /root/iperf_opt_result.out</exec>

    <exec seq="wget_no_opt" type="verbatim" ostype="exec">/tmp/wget_no_opt.sh</exec>
   
    <exec seq="wget_opt" type="verbatim" ostype="exec">/tmp/wget_opt.sh</exec>

    <exec seq="regimen" type="verbatim" ostype="system">wget 192.168.1.2/index.html</exec>

    <exec seq="start-http" type="verbatim" ostype="system">killall iperf</exec>
    <exec seq="start-http" type="verbatim" ostype="system">cp /tmp/ports.conf /etc/apache2/</exec>
    <exec seq="start-http" type="verbatim" ostype="system">service apache2 restart</exec>
    <exec seq="start-http" type="verbatim" ostype="system">bash /tmp/gen_random.sh</exec>
    <exec seq="start-http" type="verbatim" ostype="system">chmod 777 /var/www/random*</exec>
    <exec seq="start-http" type="verbatim" ostype="system">bash /tmp/gen.sh</exec>
    <exec seq="start-http" type="verbatim" ostype="system">chmod 777 /var/www/payload.txt</exec>

  </vm>


  <vm name="h2" type="libvirt" subtype="kvm" os="linux" arch="x86_64">
    <filesystem type="cow">filesystems/rootfs_opennop</filesystem>
    <mem>512M</mem>
    <if id="1" net="LanB">
      <ipv4>192.168.1.2/24</ipv4>
      <!--ipv4>192.168.1.3/24</ipv4!-->
    </if>
    <if id="9" net="virbr0">
      <ipv4>dhcp</ipv4>
    </if>
    <route type="ipv4" gw="192.168.1.1">10.0.0.0/16</route>
    <route type="ipv4" gw="192.168.1.1">192.168.0.0/16</route>

    <!-- Copy /etc/hosts file -->
    <filetree seq="on_boot" root="/tmp/">conf/hosts</filetree>

    <!-- Copy scripts -->
    <filetree seq="on_boot" root="/root/bin/">conf/hx/scripts/</filetree>

    <filetree seq="start-http" root="/tmp/">./conf/hx/</filetree>
    <filetree seq="wget_no_opt" root="/tmp/">./conf/hx/wget_no_opt.sh</filetree>
    <filetree seq="start-http" root="/tmp/">./conf/hx/prueba.sh</filetree>
    
    <filetree seq="wget_opt" root="/tmp/">./conf/hx/wget_opt.sh</filetree>
    <filetree seq="copycode" root="/root/">./conf/hx/prueba.sh</filetree>
    <filetree seq="copycode" root="/root/">./conf/hx/prueba-larga2.sh</filetree>

    <!-- Add host entries to /etc/host -->
    <exec seq="on_boot" type="verbatim">
        cat /tmp/hosts >> /etc/hosts;
        sed -i -e 's#DocumentRoot /var/www/html#DocumentRoot /var/www#' /etc/apache2/sites-enabled/000-default.conf
    </exec>

    <exec seq="iperfs" type="verbatim" ostype="system">killall iperf</exec>
    <exec seq="iperfs" type="verbatim" ostype="system">service apache2 stop</exec>
    <exec seq="iperfs" type="verbatim" ostype="exec">iperf -s > /root/iperfresult.out</exec>

    <exec seq="start-http" type="verbatim" ostype="system">killall iperf</exec>
    <exec seq="start-http" type="verbatim" ostype="system">cp /tmp/ports.conf /etc/apache2/</exec>
    <exec seq="start-http" type="verbatim" ostype="system">service apache2 restart</exec>
    <exec seq="start-http" type="verbatim" ostype="system">bash /tmp/gen_random.sh</exec>
    <exec seq="start-http" type="verbatim" ostype="system">chmod 777 /var/www/random*</exec>
    <exec seq="start-http" type="verbatim" ostype="system">bash /tmp/gen.sh</exec>
    <exec seq="start-http" type="verbatim" ostype="system">chmod 777 /var/www/payload.txt</exec>

    <exec seq="regimen" type="verbatim" ostype="system">killall iperf</exec>

    <exec seq="regimen" type="verbatim" ostype="system">service apache2 start</exec>
 </vm>


 <vm name="wanem" type="libvirt" subtype="kvm" os="linux" arch="x86_64">
    <filesystem type="cow">filesystems/rootfs_opennop</filesystem>
    <mem>512M</mem>
    <if id="1" net="Lan0">
      <ipv4>10.0.0.1/29</ipv4>
    </if>
    <if id="2" net="Lan1">
      <ipv4>10.0.0.9/29</ipv4>
    </if>
    <if id="9" net="virbr0">
      <ipv4>dhcp</ipv4>
    </if>
    <route type="ipv4" gw="10.0.0.2">192.168.0.0/24</route>
    <route type="ipv4" gw="10.0.0.10">192.168.0.0/16</route>
 
    <forwarding type="ip" />

    <!-- Copy /etc/hosts file -->
    <filetree seq="on_boot" root="/tmp/">conf/hosts</filetree>

    <!-- Copy scripts -->
    <filetree seq="on_boot" root="/root/bin/">conf/wanem/scripts/</filetree>

    <filetree seq="emula" root="/tmp/">./conf/wanem/</filetree>
    
    <!-- Add host entries to /etc/host -->
    <exec seq="on_boot" type="verbatim">cat /tmp/hosts >> /etc/hosts</exec>

    <exec seq="emula" type="verbatim" ostype="system">/tmp/configure.sh</exec>

    <!-- Add munin-node configuration -->
    <exec seq="start-mgmt" type="verbatim" ostype="system">
	unlink /etc/munin/plugins/apache_accesses;
        unlink /etc/munin/plugins/apache_processes;
	unlink /etc/munin/plugins/apache_volume;
	unlink /etc/munin/plugins/users;
	unlink /etc/munin/plugins/swap						   
    </exec>
    <exec seq="start-mgmt" type="verbatim" ostype="system">
	sed -i 's/allow ^127\\.0\\.0\\.1\$/allow ^192\\.168\\.2\\.2\$/' /etc/munin/munin-node.conf;
	service munin-node restart
    </exec>
 
  </vm>

<vm name="sta" type="libvirt" subtype="kvm" os="linux" arch="x86_64">
    <filesystem type="cow">filesystems/rootfs_opennop</filesystem>
    <mem>512M</mem>
    <if id="1" net="LanSta">
      <ipv4>192.168.2.2/24</ipv4>
    </if>
    <if id="9" net="virbr0">
      <ipv4>dhcp</ipv4>
    </if>
    <route type="ipv4" gw="192.168.2.1">192.168.0.0/16</route>
    <route type="ipv4" gw="192.168.2.1">10.0.0.0/16</route>
    <forwarding type="ip" />

    <!-- Copy /etc/hosts file -->
    <filetree seq="on_boot" root="/tmp/">conf/hosts</filetree>

    <!-- Copy scripts -->
    <filetree seq="on_boot" root="/root/bin/">conf/sta/scripts/</filetree>

    <!-- Copy ssh files -->
    <filetree seq="on_boot" root="/root/.ssh/" perms="600">./conf/sta/ssh/</filetree>

    <!-- Copy /opt/dashboard -->
    <filetree seq="on_boot" root="/opt/dashboard/">conf/sta/dashboard/</filetree>

    <!-- Start Opennop management -->
    <filetree seq="start-mgmt" root="/etc/nginx/sites-available/default">conf/sta/ngnix-default</filetree>
    <filetree seq="start-mgmt" root="/etc/munin/">conf/sta/munin.conf</filetree>

    <!-- Copy websocketd files -->
    <filetree seq="start-mgmt" root="/usr/local/bin/websocketd">../../others/websocketd64</filetree>
    
    <!-- Copy monitor files -->
    <filetree seq="start-mgmt" root="/var/www/solowan/">conf/sta/monitor</filetree>

    <!-- Copy munin files -->
    <filetree seq="load-data" root="/var/lib/munin/localdomain/">./conf/munin/localdomain.tar.gz</filetree>

    <!--DFC--><exec seq="on_boot" type="verbatim">cat /tmp/hosts >> /etc/hosts</exec>

    <!-- Importing Munin Graph Data -->
    <exec seq="load-data" type="verbatim" ostype="system">tar zxf /var/lib/munin/localdomain/localdomain.tar.gz</exec>
    <exec seq="load-data" type="verbatim" ostype="system">for i in /var/lib/munin/localdomain/*.xml; do rrdtool restore "$i" "/var/lib/munin/localdomain/${i%.xml}"; done</exec>
    <exec seq="load-data" type="verbatim" ostype="system">chmod -R 766 /var/lib/munin</exec>
    <exec seq="load-data" type="verbatim" ostype="system">chown -R munin:munin /var/lib/munin</exec>
    <exec seq="load-data" type="verbatim" ostype="system">service munin restart</exec> 

    <!-- Exporting Munin Graph Data -->
    <!--
    <exec seq="export-data" type="verbatim" ostype="system">mkdir /root/munin/localdomain</exec>
    <exec seq="export-data" type="verbatim" ostype="system">for i in /var/lib/munin/localdomain/*.rrd;do rrdtool dump $i /root/munin/localdomain/$i.xml;done</exec>
    <exec seq="export-data" type="verbatim" ostype="system">tar -cvzf localdomain.tar.gz /root/munin/localdomain</exec>
    <exec seq="export-data" type="verbatim" ostype="system">scp localdomain.tar.gz 10.0.1.3:/home/solowan/scenarios/opennop_scenario/conf/munin/</exec>
    -->

    <!-- Configure statistics -->
    
    <!-- Enable Munin -->
    <exec seq="start-mgmt" type="verbatim" ostype="system">
        mkdir /var/www/solowan;
        mkdir /var/www/solowan/monitor;
        chown munin:munin -R /var/www/solowan/;
	chmod 755 -R /var/www/solowan/
    </exec>

    <!-- Websocket start --> 
    <exec seq="start-mgmt" type="verbatim" ostype="system">/root/bin/websockets.sh > /var/log/websockets.log &amp;</exec> 
    <exec seq="start-mgmt" type="verbatim" ostype="system">service munin-node restart</exec>
    <exec seq="start-mgmt" type="verbatim" ostype="system">service nginx restart</exec>

    <!-- Nginx server start-->
    <exec seq="start-http" type="verbatim" ostype="system">service nginx start</exec>
  </vm>

  <host>
    <hostif net="LanSta">
       <ipv4>192.168.2.3/24</ipv4>
    </hostif>
    <route type="ipv4" gw="192.168.2.1">10.0.0.0/16</route>
    <route type="ipv4" gw="192.168.2.1">192.168.0.0/16</route>
  </host>

</vnx>
